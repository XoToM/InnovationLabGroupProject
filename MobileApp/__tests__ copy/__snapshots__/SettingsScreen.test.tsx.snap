// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SettingsScreen matches snapshot 1`] = `
<RCTScrollView
  style={
    {
      "backgroundColor": "white",
      "flex": 1,
      "padding": 10,
    }
  }
>
  <View>
     
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginBottom": 10,
        }
      }
    >
       
      <View
        accessibilityRole="button"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "margin": 10,
            "opacity": 1,
          }
        }
      >
         
      </View>
      <Text
        style={
          {
            "fontSize": 24,
            "fontWeight": "bold",
          }
        }
      >
        Settings
      </Text>
      <View
        accessibilityRole="button"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "margin": 10,
            "opacity": 1,
          }
        }
      />
    </View>
    <View
      style={
        {
          "marginBottom": 5,
          "padding": 20,
          "width": "90%",
        }
      }
    >
       
      <View
        accessibilityRole="button"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "margin": 10,
            "opacity": 1,
          }
        }
      >
         
      </View>
      <View
        style={
          {
            "backgroundColor": "#f0f0f0",
            "borderRadius": 10,
            "padding": 10,
          }
        }
      >
        <View
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
              "marginVertical": 5,
            }
          }
        >
           
          <RCTSwitch
            accessibilityRole="switch"
            onChange={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "height": 31,
                "width": 51,
              }
            }
            value={false}
          />
          <Text
            style={
              {
                "marginLeft": 10,
              }
            }
          >
            Wheelchair user
          </Text>
        </View>
        <View
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
              "marginVertical": 5,
            }
          }
        >
           
          <RCTSwitch
            accessibilityRole="switch"
            onChange={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "height": 31,
                "width": 51,
              }
            }
            value={false}
          />
          <Text
            style={
              {
                "marginLeft": 10,
              }
            }
          >
            Hearing loop
          </Text>
        </View>
        <View
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
              "marginVertical": 5,
            }
          }
        >
           
          <RCTSwitch
            accessibilityRole="switch"
            onChange={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "height": 31,
                "width": 51,
              }
            }
            value={false}
          />
          <Text
            style={
              {
                "marginLeft": 10,
              }
            }
          >
            Guide dog owner
          </Text>
        </View>
        <View
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
              "marginVertical": 5,
            }
          }
        >
           
          <RCTSwitch
            accessibilityRole="switch"
            onChange={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "height": 31,
                "width": 51,
              }
            }
            value={false}
          />
          <Text
            style={
              {
                "marginLeft": 10,
              }
            }
          >
            Social anxiety
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        {
          "marginBottom": 5,
          "padding": 20,
          "width": "90%",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "margin": 10,
            "opacity": 1,
          }
        }
      />
      <View
        style={
          {
            "backgroundColor": "#f0f0f0",
            "borderRadius": 10,
            "padding": 10,
          }
        }
      >
        <View
          accessibilityRole="button"
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
              "marginVertical": 5,
              "opacity": 1,
            }
          }
        >
          <RCTSwitch
            accessibilityRole="switch"
            onChange={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "height": 31,
                "width": 51,
              }
            }
            value={false}
          />
          <Text
            style={
              {
                "marginLeft": 10,
              }
            }
          >
            Tol
             color palette
          </Text>
        </View>
        <View
          accessibilityRole="button"
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
              "marginVertical": 5,
              "opacity": 1,
            }
          }
        >
          <RCTSwitch
            accessibilityRole="switch"
            onChange={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "height": 31,
                "width": 51,
              }
            }
            value={true}
          />
          <Text
            style={
              {
                "marginLeft": 10,
              }
            }
          >
            IBM
             color palette
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
